### YamlMime:QSharpType
uid: microsoft.quantum.canon.ampampbyreflectionsphases
name: AmpAmpByReflectionsPhases
type: function
namespace: Microsoft.Quantum.Canon
summary: >2
   Amplitude amplification by partial reflections.
remarks: >2-
   Amplitude amplification is a special case of oblivous amplitude amplification where there are no system qubits and the oblivious oracle is set to identity.
   In most cases, `startQubits` is initialized in the state $\ket{\text{start}}\_1$, which is the $-1$ eigenstate of `startStateReflection`
syntax: 'function AmpAmpByReflectionsPhases (phases : AmpAmpReflectionPhases, startStateReflection : ReflectionOracle, targetStateReflection : ReflectionOracle) : (Qubit[] => () : Adjoint, Controlled)'
input:
  content: '(phases : AmpAmpReflectionPhases, startStateReflection : ReflectionOracle, targetStateReflection : ReflectionOracle)'
  types:
  - name: phases
    summary: ' Phases of partial reflections'
    uid: microsoft.quantum.canon.ampampreflectionphases
  - name: startStateReflection
    summary: ' Reflection operator about start state'
    uid: microsoft.quantum.canon.reflectionoracle
  - name: targetStateReflection
    summary: ' Reflection operator about target state'
    uid: microsoft.quantum.canon.reflectionoracle
output:
  content: '(Qubit[] => () : Adjoint, Controlled)'
  types:
  - summary: >2
       An operation that implements amplitude amplification by partial reflections.
    isOperation: true
    input:
      types:
      - uid: Qubit
        isPrimitive: true
        isArray: true
    output:
      types:
      - uid: ()
        isPrimitive: true
    functors:
    - Adjoint
    - Controlled
