### YamlMime:QSharpType
uid: microsoft.quantum.canon.preparechoistate
name: PrepareChoiState
type: operation
namespace: Microsoft.Quantum.Canon
summary: >2
   Prepares the Choi–Jamiłkowski state for a given operation onto given reference
   and target registers.
remarks: >2
   The Choi–Jamiłkowski state $J(\Lambda)$ of a quantum process is
   defined as
   $$
   \begin{align}
       J(\Lambda) \mathrel{:=} (\boldone \otimes \Lambda)
       (|\boldone\rangle\!\rangle\langle\!\langle\boldone|),
   \end{align}
   $$
   where $|X\rangle\!\rangle$ is the *vectorization* of a matrix $X$
   in the column-stacking convention. Learning a classical description
   of this state provides full information about the effect of $\Lambda$
   acting on arbitrary input states, and forms the foundation of
   *quantum process tomography*.
syntax: 'operation PrepareChoiState (op : (Qubit[] => ()), reference : Qubit[], target : Qubit[]) : ()'
input:
  content: '(op : (Qubit[] => ()), reference : Qubit[], target : Qubit[])'
  types:
  - name: op
    summary: >2-
       Operation $\Lambda$ whose Choi–Jamiłkowski state $J(\Lambda) / 2^N$
       is to be prepared, where $N$ is the number of qubits on which
       `op` acts.
    isOperation: true
    input:
      types:
      - uid: Qubit
        isPrimitive: true
        isArray: true
    output:
      types:
      - uid: ()
        isPrimitive: true
  - name: reference
    summary: >2-
       A register of qubits starting in the $\ket{00\cdots 0}$ state
       to be used as a reference for the action of `op`.
    uid: Qubit
    isPrimitive: true
    isArray: true
  - name: target
    summary: >2
       A register of qubits initially in the $\ket{00\cdots 0}$ state
       on which `op` is to be applied.
    uid: Qubit
    isPrimitive: true
    isArray: true
output:
  content: ()
  types:
  - uid: ()
    isPrimitive: true
seeAlso:
- microsoft.quantum.canon.preparechoistatec
- microsoft.quantum.canon.preparechoistatea
- microsoft.quantum.canon.preparechoistateca
