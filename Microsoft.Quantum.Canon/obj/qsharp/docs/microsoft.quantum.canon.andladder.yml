### YamlMime:QSharpType
uid: microsoft.quantum.canon.andladder
name: AndLadder
type: operation
namespace: Microsoft.Quantum.Canon
summary: >2
   Applies a unitary given by the following map on computational basis vectors:
   $$
   \begin{align}
       \ket{x\_1, \dots, x\_n} \ket{y\_1, \dots, y\_{n - 1}} \mapsto
       \ket{x\_1, \dots, x\_n} \ket{
           y\_1 \oplus (x\_1 \land x\_2), \dots, y\_{n - 1} \oplus (x\_1 \land x\_2 \land \cdots \land x\_{n - 1}
       },
   \end{align}
   $$
   where $\ket{x\_1, \dots, x\_n}$ refers to the computational basis
   states of `controls`, and where $\ket{y\_1, \dots, y\_{n - 1}}$
   refers to the computational basis states of `targets`.
remarks: >2-
   - Used as a part of <xref:microsoft.quantum.canon.applymulticontrolledc>
     and <xref:microsoft.quantum.canon.applymulticontrolledca>.
   - For the explanation and circuit diagram see Figure 4.10, Section 4.3 in Nielsen & Chuang.
syntax: 'operation AndLadder (ccnot : CCNOTop, controls : Qubit[], targets : Qubit[]) : ()'
references: >2
   - [ *Michael A. Nielsen , Isaac L. Chuang*,
       Quantum Computation and Quantum Information ](http://doi.org/10.1017/CBO9780511976667)
input:
  content: '(ccnot : CCNOTop, controls : Qubit[], targets : Qubit[])'
  types:
  - name: ccnot
    summary: ' The CCNOT gate to use for the construction.'
    uid: microsoft.quantum.canon.ccnotop
  - name: controls
    summary: >2-
       A register of qubits to be used as controls for the and ladder.
       This operation leaves computational basis states of `controls`
       invariant.
       The length of `controls` must be at least 2, and must
       be equal to one plus the length of `targets`.
    uid: Qubit
    isPrimitive: true
    isArray: true
  - name: targets
    summary: >2
       The length of `targets` must be at least 1 and equal to the length
       of `controls` minus one.
    uid: Qubit
    isPrimitive: true
    isArray: true
output:
  content: ()
  types:
  - uid: ()
    isPrimitive: true
functors:
- Adjoint
