### YamlMime:QSharpType
uid: microsoft.quantum.canon.modularmultiplybyconstantle
name: ModularMultiplyByConstantLE
type: operation
namespace: Microsoft.Quantum.Canon
summary: " Let us denote modulus by N and constMultiplier by a \n then this operation implements a unitary defined by the following map on \n computational basis:\n |y⟩ ↦ |a⋅y (mod N) ⟩, for all y between 0 and N - 1 \n "
remarks: " - For the circuit diagram and explanation see Figure 7 on [Page 8\n        of arXiv:quant-ph/0205095v3](https://arxiv.org/pdf/quant-ph/0205095v3.pdf#page=8)\n - This operation corresponds to Uₐ in \n   [arXiv:quant-ph/0205095v3](https://arxiv.org/pdf/quant-ph/0205095v3.pdf)"
syntax: 'operation ModularMultiplyByConstantLE (constMultiplier : Int, modulus : Int, multiplier : LittleEndian) : ()'
input:
  content: '(constMultiplier : Int, modulus : Int, multiplier : LittleEndian)'
  types:
  - name: constMultiplier
    summary: ' Constant by which multiplier is being multiplied. Must be co-prime to modulus.'
    uid: Int
    isPrimitive: true
  - name: modulus
    summary: ' The multiplication operation is performed modulo `modulus`'
    uid: Int
    isPrimitive: true
  - name: multiplier
    summary: >2
       The number being multiplied by a constant.
       This is an array of qubits representing integer in little-endian bit order.
    uid: microsoft.quantum.canon.littleendian
output:
  content: ()
  types:
  - uid: ()
    isPrimitive: true
functors:
- Adjoint
- Controlled
