### YamlMime:QSharpType
uid: microsoft.quantum.canon.zip
name: Zip
type: function
namespace: Microsoft.Quantum.Canon
summary: >2
   Given two arrays, returns a new array of pairs such that each pair
   contains an element from each original array.
remarks: >2-

  ### Examples
   ```Q#
   let left = [1; 3; 71];
   let right = [false; true];
   let pairs = Zip(left, right); // [(1, false); (3, true)]
   ```
syntax: "function Zip (left : 'T[], right : 'U[]) : ('T, 'U)[]"
input:
  content: "(left : 'T[], right : 'U[])"
  types:
  - name: left
    summary: ' An array containing values for the first element of each tuple.'
    uid: "'T"
    isLocal: true
    isArray: true
  - name: right
    summary: >2
       An array containing values for the second element of each tuple.
    uid: "'U"
    isLocal: true
    isArray: true
output:
  content: ('T, 'U)[]
  types:
  - summary: >2
       An array containing pairs of the form `(left[idx], right[idx])` for
       each `idx`. If the two arrays are not of equal length, the output will
       be as long as the shorter of the inputs.
    isArray: true
    types:
    - uid: "'T"
      isLocal: true
    - uid: "'U"
      isLocal: true
typeParameters:
- uid: "'T"
  summary: ' The type of the left array elements.'
- uid: "'U"
  summary: >2
     The type of the right array elements.
