### YamlMime:QSharpType
uid: microsoft.quantum.canon.applypaulifrombitstring
name: ApplyPauliFromBitString
type: operation
namespace: Microsoft.Quantum.Canon
summary: >2
   Applies a Pauli operator on the $n^{\text{th}}$ qubit if the $n^{\text{th}}$
   bit of a Boolean array matches a given input.
remarks: >2
   The Boolean array and the quantum register must be of equal length
syntax: 'operation ApplyPauliFromBitString (pauli : Pauli, bitApply : Bool, bits : Bool[], qubits : Qubit[]) : ()'
input:
  content: '(pauli : Pauli, bitApply : Bool, bits : Bool[], qubits : Qubit[])'
  types:
  - name: pauli
    summary: ' Pauli operator to apply to `qubits[idx]` where `bitsApply == bits[idx]`'
    uid: Pauli
    isPrimitive: true
  - name: bitApply
    summary: ' apply Pauli if bit is this value'
    uid: Bool
    isPrimitive: true
  - name: bits
    summary: ' Boolean register specifying which corresponding qubit in `qubits` should be operated on'
    uid: Bool
    isPrimitive: true
    isArray: true
  - name: qubits
    summary: >2
       Quantum register on which to selectively apply the specified Pauli operator
    uid: Qubit
    isPrimitive: true
    isArray: true
output:
  content: ()
  types:
  - uid: ()
    isPrimitive: true
functors:
- Adjoint
- Controlled
